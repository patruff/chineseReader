// /* eslint-disable no-restricted-globals */

// import { clientsClaim } from 'workbox-core';
// import { ExpirationPlugin } from 'workbox-expiration';
// import { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';
// import { registerRoute } from 'workbox-routing';
// import { StaleWhileRevalidate, CacheFirst } from 'workbox-strategies';

// clientsClaim();

// // Precache all of the assets generated by your build process.
// // Their URLs are injected into the manifest variable below.
// // This variable must be present somewhere in your service worker file,
// // even if you decide not to use precaching. See https://cra.link/PWA
// precacheAndRoute(self.__WB_MANIFEST);

// // Set up App Shell-style routing
// const fileExtensionRegexp = new RegExp('/[^/?]+\\.[^/]+$');
// registerRoute(
//   // Return false to exempt requests from being fulfilled by index.html.
//   ({ request, url }) => {
//     if (request.mode !== 'navigate') {
//       return false;
//     }
//     if (url.pathname.startsWith('/_')) {
//       return false;
//     }
//     if (fileExtensionRegexp.test(url.pathname)) {
//       return false;
//     }
//     return true;
//   },
//   createHandlerBoundToURL(process.env.PUBLIC_URL + '/index.html')
// );

// // Cache text files
// registerRoute(
//   ({ url }) => url.pathname.endsWith('.txt'),
//   new CacheFirst({
//     cacheName: 'text-files',
//     plugins: [
//       new ExpirationPlugin({
//         maxEntries: 50,
//         maxAgeSeconds: 30 * 24 * 60 * 60, // 30 days
//       }),
//     ],
//   })
// );

// // Cache dictionary
// registerRoute(
//   ({ url }) => url.pathname.endsWith('.json'),
//   new StaleWhileRevalidate({
//     cacheName: 'dictionaries',
//   })
// );

// // This allows the web app to trigger skipWaiting via
// // registration.waiting.postMessage({type: 'SKIP_WAITING'})
// self.addEventListener('message', (event) => {
//   if (event.data && event.data.type === 'SKIP_WAITING') {
//     self.skipWaiting();
//   }
// });

// // Any other custom service worker logic can go here.
